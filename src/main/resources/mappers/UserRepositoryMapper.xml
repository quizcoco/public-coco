<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quizcoco.web.repository.UserRepository">

<!-- 로그인 -->
<select id="findByUserName" resultType="User">
    select 
      *
    from user
    where username=#{username}
</select>

<!-- 소셜 로그인 -->
<select id="findByEmail" resultType="User">
    select 
      *
    from user
    where mail=#{mail}
</select>

<!-- 회원가입 -->
<insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
    insert into user
    (
      username,
      pw,
      nick_name,
      mail
    )
    values
    (
      #{userName},
      #{pw},
      #{nickName},
      #{mail}
    )
</insert>

<!-- 회원 가입 시 아이디 중복 체크 -->
<select id="usernameExists" resultType="int">
  select count(*)
  from user
  where username = #{username}
</select>

<!-- 회원 가입 시 메일 중복 체크 -->
<select id="mailExists" resultType="int">
  select count(*)
  from user
  where mail = #{mail}
</select>



<!-- 포인트 변경 등 -->
<update id="update" parameterType="User">
    UPDATE user
    SET

    nick_name = #{nickName},
    level = #{level},
    point = #{point},
    exp = #{exp},
    img = #{img},
    message = #{message}

    WHERE id = #{id}
</update>

<!-- 조회 -->
<select id="findByUserId" resultType="User">
    select 
      *
    from user
    where id=#{id}
</select>

<!-- 유저 프로필 사진 및 정보 업데이트 -->
<update id="updateUser" parameterType="User">
  update user set 
    img = #{img},
    nick_name = #{nickName},
    message = #{message}
  where id = #{id}
</update>

<!-- 회원 가입, 업데이트 시 닉네임 중복 체크 -->
<select id="nicknameExists" resultType="int">
  select count(*)
  from user
  where nick_name = #{nickname}
</select>

<!-- 회원 정보 업데이트 시 메세지 체크 -->
<select id="messageExists" resultType="int">
  select count(*)
  from user
  where message = #{message}
</select>

<!-- 회원 정보 불러오기 (레벨, 경험치,포인트 ) -->
<select id="findLevelByUserId" resultType="int" parameterType="Long">
  select level
  from user
  where id = #{id}
</select>
<select id="findExpByUserId" resultType="int" parameterType="Long">
  select exp
  from user
  where id = #{id}
</select>
<select id="findPointByUserId" resultType="int" parameterType="Long">
  select point
  from user
  where id = #{id}
</select>

</mapper>
